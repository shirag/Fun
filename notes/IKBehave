



                            
GetAround - I am passionate about GSP and video parts of a car.

/******************************************************************************************************************/
Elevator Pitch[1-2 minute intro, focus, something exciting to say, last line is what you are looking for?]
   
  I used to work as Sr Software Engineer at Nagra where I would build and own s/w components. 
  My responsibilities included gather requirements, designing, developing, unit-testing s/w  and then integrate it with rest of STB system.
  I also very good root-cause analysis skills. I am very comfortable at debugging and trouble shooting open-source code and code written by others.
  Before Nagra, I used to work with a Fabless semiconductor company where I would integrate algorithms, and applications with embedded systems.
  My most recent experience is building HTML5 based video player using GStreamer framework. 
  I have a deep interest in embedded systems, and OTT-streaming which is my main domain expertise.
  When it comes to programming language, C/C++ is my main forte.
  I enjoy the challenges of working on software that has to run in a very resource constrained environment.
  Im looking to join a company where people are smart, and then I help them to be successful.
  
  
********************************************************************************************************************    
Challenging project tips:
1. Something you know very well.
2. Atleast one challenge: diffcult bug, difficult design, too many stake holders, strong business challenge etc. 
3. You are excited to show off.
4. Is successful and relatively recently   

* Business context
* Main design:
* My role:
* What was the problem? What made it challenging?
* What did you learn from it?    

/********************************************************************************************************************
[Challenging Project: Video player development using Gstreamer Framework, OTT-MP4 playback]

* Business context:
    Need to build Opentv5 middleware on embedded Linux and using HTML5, with all digital tv components.
    Develop OTT-media player using Gstreamer. This enables all the FOSS plugins to be reused instead of developing from scratch.
    
* Main design:
    Develop a GStreamer application that would be able to handle various OTT scenarios(Progressive, MSS, fMP4, etc). Basically, 
    develop relevant plugins and reuse some of the existing plugins.
    
* My role:
    OTT-MP4 feature develpment. Build src, decontainer and decoder plugins/bins for the pipeline, integrate them, and unit test.  
    Implement basic player features like seek etc. Also do research as to timings of the notifications to be sent to the application and Gstreamer states.
    
* What was the problem? What made it challenging?
  * The challenge here is to convert control only pipeline to control + data pipeline(Broadcast based solution that had lot of acceleration).
    Adapt the existing pipeline that was built for NON-OTT playback for OTT playback.  
  * Time constraints, Keeping all internal stakeholders happy(QA + other groups), + Telephnica the customer.
  * Integrating with various internal libraries(ResMan + WinMan + DevMan and Flowproxy).
  * Nailing down seek logic. Extensive seek testing.
  * Help the India team regarding all the details and reuse the pipeline for MSS.
    [As soon as you set the pipeline to a playing state it goes through various interim states before reaching the PLAYING state.
     Proper resource allocation should be done in proper states(stream specific and non-stream specific). There can be events coming in that
     indicates a CAPS(decoder configuration) and SEGMENT(AU time stamp).  Proper plugin code should be written to handle this.
    
     Player sets the pipeline to playing state. Using the ASYNC_DONE to send stream_started notification to external apps.
     If there is start from non-zero offset request, then upon the receipt of ASYNC_DONE we would do an immediate seek.
     We turn off pre-rolling after going to  playing state. Down side of it is we dont know when the set_position completion takes place.
     Then we came out with a polling mechanism to detect the position change.] 

* What did you learn from it?    
    * GStreamer framework and plugin development, prerolling etc.
    * DBus communication.
    * Memory leak detection using scripts and Valgrind etc. Optimization and stabiliatione and productize.
    * GLib that OO and design patterns like pipeline, factory, Observer etc.
    * GDB Multithreading debugging(backtrace, deadlock and blocked threads), debugging FOSS components.
    * Javascript and HTML5 video tag.
    * Success: Recognised the talent and contribution. They wanted me to MV office. That was an indirect appreciation of skill and my work.
    
    * Reduce number of copies.
    * Low Memory footprint. Run Valgrind and keep it low. Gstremer has it limitations. Bloated code.

********************************************************************************************************************    
[Challenging Project: Update to a newer version of GStreamer] 

Business context:
    More support for soup for MPEG DASH
    Optimization in terms of number of copies. 
Main design:
My role in it:
    Follow the cookbook techniques.
    Use some of the new features.
    Support all use cases.
    Solid unit test frame work
    Ensure all the OTT pipelines work properly and pass all unit tests.
    
    
*********************************************************************************************************************
[Challenging Project: YouTube PlayBack + DIAL Integration]
Business context:
   Integration of YouTube App with STBs and pass all certification tests.
Main design:
   Modify/implement player functionality, MSE support in WebKIT and OpentV player and GStreamer framework. 
   Use the existing OTT pipeline to playback YouTube video.
My role in it:
   Be accountible for some of the trick mode aspects of the certfication[Cancel a seek when a seek is going on]
   Also, ensure that DIAL end to end features work. Inegrate Netflix DIAL code etc. 
   and be accountible. Able to go over javasript test code to identify test cases and criterion for passing.
   Also ensure live related Youtube aspects work properly. 
   Resolve all the issues around start from non-zero offset when playing using DIAL.
   Handle the part where data transfer between webkit process and pipeline porcess transfer takes place.
   Feed the pipeline with the appropriate source segment and flush the shared memory when a seek takes place.
   EOF logic. How to handle that properly?
   
   
**********************************************************************************************************************    
[Challenging Project: Application Manager Window Manager Support for STBs]
Business context:
   Ability to run multiple applications on an STB. There was a requirement to run Netflix in backfground mode.
Main design:
                            DirectFB work around the Linux kernel.
   Applications create windows using DirectFB and window manager is aware of all windows present in the system and their 
   states in terms of visibility, z-order and focis. Application manager queries the 
   state of the app with WinMan performs action accordingly. Listen to DirectFB graphics calls using SaWMan interface 
   and control the GUI and what applications are running. 
My role in it:
   Own the WinMan code and design APIs and be the go to person.
   Restacking logic: When a window is raised to top all the associated windows also should be raised properly.
   Restacking takes place ensure that right window gets the focus.
    
**********************************************************************************************************************    
[Challenging Project: DVBST and DVB teletext Subtitle support for OpenTV framework]
Business context:
HLS streams have DVBST and DVB Teletext embedded in them.

Main design:
Main port existing libraries and integrate with our Gstreamer framework.
My role in it: Ownership, talkingt to customers.
What did I learn : Window manager
***********************************************************************************************************************       

Eride GPS experience:

There is BBRAM to which you write the RTC offset when the receiver is shut down. When the receiver is turned ON again,
it reads the offset from the BBRAM gets the accurate time and performs all the calculation. One of the application of time is to 
find out if the ephemeris is valid or not. 

RecPlay software is used to tune GPS algorithms. You record measurements and record positions calculated. Later for the same measurements 
you try to produce positions again and see if it makes a difference. We used memento design pattern in here. 

http://www.cs.dartmouth.edu/~campbell/cs50/socketprogramming.html

Stack Usage calculation: 
1. Testing based approach. Initialize it to a pattern.
2. Beginning of the polling loop check how much of that has been modified.
3. Use recplay files to playback. After the crash we go ahead and diagnose the contents of the stack.

For Flash programming SPI is used since SPI is very fast.

************************************************************************************************************************
Design patterns used at OTV;

Creational:

    * Singleton:
        * player manager?
    * Abstract Factory: Glib object creation.
    * Factory Method:    
Structural: 
    * Proxy pattern(Every process talks to other process using proxy)
    
Behavioral:

Concurrency:    



************************************************************************************************************************              

2008 - 
2009 - 
2010 - 
2011 - IVS/ 
2012 - Telephonica suport  
2013 - Playe trick modes. DVBST subtitles
2014 - DIAL + Teletext. YouTube support.
2015 - DIAL support, WinMan support for MultiApp.
       Show, raisetoTop and provide focus.
       DirectFB upgrade 
2016 - YouTube Bug fixes. Gstreamer Upgrade + WebKit Upgrade + CI + Multiapp ZIndex + Z Layer stuff.
*******************************************************************************************************************
     

What are my strengths and weakness?
Strength: I am very food at focussing. I am also very good at triaging issues.
Weakness is something you dont want to do....soldering...
     
*******************************************************************************************************************
Interview takeaways:

Applie Phone screen: Unit tests. Size of int mistake while reversing a string.

BnW Onsite: Did not listen to the request for Class diagram. listen, listen, listen. Did not ask adequate number of questions.
            I was not throwing enough technical terms; mutex, message queue etc..
NVIDIA1: 
    1. Given three arrays, find all elements that add upto K by adding one member of each array. 
       * Soln 1: Brute Force. O(n * n * n) soln.
       * Soln 2: Sort the last array(n * log n). For every two values you search for the third in the sorted array. O(n * n * log n) soln.
       * Soln 3: For Second and third array generate all pairs and their sum(n * n). Have a map where you store the key as the sum. values are 
                 vector of index pair. Now you go over the first array and for every element, lookup the map and see if (k - element) exists.
                 O(n * n) soln.  
                 
       I did not push hard.

    2. Exception handling in C++. How to achieve something equivalent of Python's final? Good job.            
    3. What is the problem of deriving square from rectangle? OOPS went wrong..
       SOLID: Only when you substitue a class you can replace.
       
   
Symantek 2:
    1. what is the difference between ipv4 and ipv6?
    2. What is the difference between multicast and broadcast?
    3. What is NAT and ARP?
    4. C++ what is virtual?
    5. What is QOS
    6. Difference between C and C++
    
NVIDIA2:   
    1. Use of volatile.
    2. strcpy        
     
Akamai:
    1. Significance of copy contructor?
    2. What is virtual?
    3. What is pure virtual function?
    4. What is initialization list?
    5. What is friend function?
    6. Can you create an instance of a pure virtual function/Abstract class?
    7. What is condition variable?
    8. How do you achieve a singleton in C++
    9. Design a C++ linked list class that has values in ascending order.
         
IKMOCK1; Path in a tree that adds to a particular val. Did not ask if its OK to just print and screwed up the stuff.
         No discussions. Take control of the interview.
         Dont waste time in writing unnecessary stuff like node struct etc.

IKMOCK2; In an array find 4 values that add to a sum. Didnt event think of brute force soln.
         I thought of a recursive brute force. If I were to think of iterative brute force it would have been better.
         Trying to remember the entire problem.
         Also came out with recursive soln that was 2 pow n complexity. Bad bad Bad..4 for loops would have been n pow 4. better
        
IKMOCK3: Problem: Spilt a linked list such that all odds are at the beginning and evens are at the end.
         Did not have a proper test cases.
         run by your code with solid test cases.
         Identify what are the challenges in traversing and iterating a linked list?  Because he said dding to the tail is a better approach.
         But, I did not identify some of the corner cases:
         1. Traversing until when?
         2. returning the new head?
         3. proper handling of the prev nullpointer.
         4. I had holes in my pointer assginements.
         
         Most important thing is I had it going. But, then when he provided an alternate solution
         I immediately jumped onto his solution without pushing my self further on the solution I had.
         
Ashok Mock:
         Great job: Draw a table. Could identify it was a graph problem. Should have understood the problem better.
         Jumped onto DFS first. BFS would have been a better choice. Evluate BFS and DFS both before starting coding.
         
FaceBook Phone:
         1. Clone a LL. Hint was given regarding the dummy node.
         Initially create a dummy node. Point the prev to this node. 
         When you do prev->next you dont have to do a check for prev to null pointer. Just keep attaching to the tail and then 
         prev->next = newNode;
         Important: Do not forget to release the dummy node.
         2. Clone a tree with random pointers.
         3. Create all subsets in a set. Why is 2 power n.
         Calcualating the complexity: I made a mistake finally because I did not say  2 power n * n. Never ignore the 
         complexity of the printing part. 
         
*******************************************************************************************************************

Preparation. Keep examples ready. Have binary tree example ready that you can quickly draw on white board.
Have examples ready in your cheat sheet. Have trees with 2 n leaves.

My approach for white boarding:
After the interviewer says, go ahead and code:
1. Write the example in the corner of the white board. All the way at the top. Write some of the basic test cases. 
2. Write input arguments. No closing parenthesis yet.
3. Write function name.
4. Leave 2 spaces for initialization later.
5. Write the error handling case followed by base case.
6. Recursive part
7. Post processing after recursive part.   
8. return values. 
9. while loop, dont forget to increment appropriate index.
10. Identation: 2 spaces. 
11. You are writing all the stacks,data structures etc all the way down. 
    You are standing in the middle. Point is you dont want to run around from
    one corner of the room to another.

*******************************************************************************************************************
Why do you want to join a company? 
1. Go over the role.
2. Go over the company technology blog to find out what makes a company unique?
3. Find the things company is proud of, understand those aspects, connect with them: Technical power/cloud/culture/awesome UI.     
4. All the opensource projects company works on? 

*******************************************************************************************************************
What are the questions you would ask?
* What is your developmental process?
* What is your release process?
* What is your typical day like?
* What is that you like about this place?
* What is the culture of this place like?

*******************************************************************************************************************
Give an example of where you had a conflict with your manager/Co-worket and how you resolved it?

Conflicts are disagrements on design decisions or process decisions.
Discuss the method. Not the outcome. It does not matter if you won or lost. What matters is how you handle.
You ould preface your reply with "At work, we are encouraged to debate a solution , because thats how best ideas coeme to the fore. debating is the 
key to differentiating a high performance team to mediocre team

Give more context in the answer. e.g. If it were a design decision conflict, give a high level view of how far the project was and why 
it was important to make that decision.
If it was a process conflic, explain little bit about what the process did? Dont spend too much time related to context. A minute is enough.

Emphasise on what you learnt. Win or lose, it should come as a humbing expericen.    

* Respectful negotiation: Norbert create a new branch problem(process).
* Respectful debate: Listen. Listen Listen. I dont react and try to understand the problem when people are emotional about  a prolem. 
                     Dont react. Just repond. Moce to mountain view office.
* Gathering data patiently over a period of time: Show video window after the first Iframe. Develop some proof of concept/prototype to back up my argument.
* Gathering consensus: Subtilte delay with Henry Fang and Phuc. Conflict with Phuc .
* Escalation: Conflict with Daniel(Escalation).

Things to avoid:
* Avoid discussing resented or inconclusive conflicts.
* Avoid sayinf there was never a conflict.
* Also dont say you have lot of such incidents to report.
*******************************************************************************************************************









