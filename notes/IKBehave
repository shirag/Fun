

* Practice block diagrams for all challenging projects.
* For scaling: Think how you can talk about your apman/WinMan prject.
  From a devide point of view, not flooding the server can be one scalablity answer.
* HLS algorithm(high level idea of how the algorithm might look like?)
  YOu have  low water mark, watermark1, watermark 2 and watermark3:
  Initially you would start playing back when you hit the watermark1. Now you are playing back the lowest bit stream.
  When the buffer level hits the watermark2, you will move to the second fastest bit stream.
  When you hit the third one, you move to the third bit stream.
  
* Why is that our seek is polling based? We turned off the prerolling after the initial setup. 
  Because of the ASYNC_DONE will not go to the Gstramer app.
  So, in the case of seek also, ASYNC_DONE will not be sent to the app. So, the app has to poll.
* Conflict/Most difficult project/most difficult people:   
  Escalation is good. Subtle escalation is very important. It is better than not doing anything. 
  The worst thing that can happen is project getting delayed.
* Two kinds of conflicts can arise when there is a bug:
  * its my bug. But, I dont have time to fix.
  * its not my bug.
* What are the problem in my current company? or why you want to quit?
  Flat, too close knit team, small and very less impact on the industry.
  Highly disconnected. No proper vision.  No product stratergy.
  Old: company and technology.
  Revenue was not good. So, expense went down which impacted the quality.
* How do you handle a scenario when the project is late?
  * Project typically get delayed because of feature creep. So, proper care should be taken when defining the scope.
    The way to handle this is to do a partial minimal implementation initially.
    Video tag is so complicated. You dont implement the entire thing. You implement only a partial set.
  * Complexity: When the complexity is not properly 
  
  
*******************************************************************************************************************
What makes you a Senior s/w engineer

*  I own stuff. I am responsible and accountible.
*  I write unit tests first.


*******************************************************************************************************************
Why do you want to join FaceBook? 
1. connecting people
1. Go over the role.
2. Go over the company technology blog to find out what makes a company unique?
3. Find the things company is proud of, understand those aspects, connect with them: Technical power/cloud/culture/awesome UI.     
4. All the opensource projects company works on? 

*******************************************************************************************************************
Phone screen:
1. Your intro and his intro not more that 10 minutes.
2. Before the technical question starts, ask for the format? What is the key thing they are looking for?
3. Dont give up. Dont give up...Take up the entire 45 minutes. When it comes to 
   Ask questions..ask questions..ask questions..not hints or solutions..
   What is the key thing you look in your co-worker or subordinate?
   What are the challenges on a daily basis? What is the hard part of your job?
   Try to suggest a solution there may be.
   

*******************************************************************************************************************
HENRY - What are the questions you would ask?

Mine

 this is what do you do? whats next/roadmap?
 team and role?(manager question)
 what do you working enjoy here? favorite thing?
 important challenges of being an engineer/manager?

* What are some hard parts of the job or problems you try to solve?
* What is the breakdown in terms of work? % development and % bug fixing?
* What is that you think its OK for your subordinate to ask/expect from you? and what is not?



IK
* What is your developmental process?
* What is your release process?
* What is your typical day like?
* What is that you like about this place?
* What is the culture of this place like?

*******************************************************************************************************************
What are your expectations out of your technical manager?
* Prioritazation of the work.
* Help resolve conflits with members of the other team and within member of the same team.
* Empowerment. He gives me the power and trusts me with the power.
* Career path/guidance or growth.
* Regular feedback. Positive or negative. 
*******************************************************************************************************************
Give an example of where you had a conflict with your manager/Co-worker and how you resolved it?

Conflicts are disagrements on design decisions or process decisions.
Discuss the method. Not the outcome. It does not matter if you won or lost. What matters is how you handle.
You ould preface your reply with "At work, we are encouraged to debate a solution , because thats how best ideas coeme to the fore. debating is the 
key to differentiating a high performance team to mediocre team

Give more context in the answer. e.g. If it were a design decision conflict, give a high level view of how far the project was and why 
it was important to make that decision.
If it was a process conflic, explain little bit about what the process did? Dont spend too much time related to context. A minute is enough.

Emphasise on what you learnt. Win or lose, it should come as a humbing expericen.    

* Respectful negotiation: 
          Process decision - Norbert create a new branch problem(process).
                      Listen. Listen Listen. I dont react and try to understand the problem when people are emotional about  a problem. 
                     Dont react. Just repond. Moce to mountain view office.
                     
* Respectful debate:  Don't present objections as flat dismissals (leave open the possibility that there's a response). 
                      Always go to white board and use block diagrams and sequence diagrrams. 
* Gathering data patiently over a period of time(design conflict): 
          Design decision - Show video window after the first Iframe. Show numbers. Develop some proof of concept/prototype to back up my argument.
                            Show logs clearing indicating the flow of events.
          Process decision - The product team would always want to release the product without adequate testing. Push back a bit. Emphasize on the process.                  
        
* Gathering consensus:
               seek with Amar's team 
               Subtilte delay with Henry Fang and Phuc. Conflict with Phuc .
* Escalation: 
          They wanted me to fly to Europe sevelral times for the Vodaphone bugs.
          Process decision -CC your managers in all email conversations.

Things to avoid:
* Avoid discussing resented or inconclusive conflicts.
* Avoid sayinf there was never a conflict.
* Also dont say you have lot of such incidents to report.

                 
*******************************************************************************************************************
What are my strengths and weakness?
Strength: I am very food at focussing. I am also very good at triaging issues.
Weakness: is something you dont want to do....soldering is the best example...
          I tend to solve all problems on my own without taking others help. At times, it can be bad.
          If I know somebody is an expert at something, I do that. But, if I dont have that opinion, then I tend to focus on my own. 
           

/******************************************************************************************************************/
Elevator Pitch[1-2 minute intro, focus, something exciting to say, last line is what you are looking for?]
   
  I used to work as Sr Software Engineer at Nagra where I would build and own s/w components. 
  My responsibilities included gather requirements, designing, developing, unit-testing s/w  and then integrate it with rest of STB system.
  
  I also very good root-cause analysis skills. I am very comfortable at debugging and trouble shooting open-source code and code written by others.
  Before Nagra, I used to work with a Fabless semiconductor company where I would integrate algorithms, and applications with customer device platforms.
  
  My most recent experience is building HTML5 based video player using GStreamer framework. 
  I have a deep interest in embedded systems, and OTT-streaming which is my main domain expertise.
  When it comes to programming language, C/C++ is my main forte.
  Like Challenges of working on software that has to run in a very resource constrained environment.
  Im looking to join a company where people are talented, and [then I help them to be successful] OR I want to work with them in a productive way.
  
  
********************************************************************************************************************    
Challenging project tips:
1. Something you know very well.
2. Atleast one challenge: diffcult bug, difficult design, too many stake holders, strong business challenge etc. 
3. You are excited to show off.
4. Is successful and relatively recently   

* Business context
* Main design:
* My role:
* What was the problem? What made it challenging?
* What did you learn from it?    

/********************************************************************************************************************
[Challenging Project: Video player development using Gstreamer Framework, OTT-MP4 playback]

* Business context(VP level):
    Need to build Opentv5 middleware on embedded Linux and using HTML5, with all digital tv components.
    Develop OTT-media player using Gstreamer. This enables all the FOSS plugins to be reused instead of developing from scratch.
    
    why? Company moving towards standards web based solutions. old tech was embedded native API player. New solution was W3C standard HTML 
    
* Main design:
    Develop a GStreamer application that would be able to handle various OTT scenarios(Progressive, MSS, fMP4, etc). Basically, 
    develop relevant plugins and reuse some of the existing plugins.
    
* My role:
    OTT-MP4 feature develpment.
    Be the OTT-Mp4 pipeline owner. 
    
    Build src, decontainer(Mp4/QtDemux) and decoder plugins/bins for the pipeline, integrate them, and unit test.
    Integrating with platform drivers.  
    Implement basic player features like seek etc. Also do research as to timings of the notifications to be sent to the application and Gstreamer states.
    
    More details Mp4/qtdemux element. Describe details
    
    
* What was the problem? What made it challenging?Non standard/other ways..(quantitative..)
  * The challenge here is to convert control only pipeline to control + data pipeline(Broadcast based solution that had lot of acceleration).
    Adapt the existing pipeline that was built for NON-OTT playback for OTT playback.  
  * Time constraints, Keeping all internal stakeholders happy(QA + other groups), + Telephnica the customer.
  * Integrating with various internal libraries(ResMan + WinMan + DevMan and Flowproxy).
  * Nailing down seek logic. Extensive seek testing. 
  * Help the India team regarding all the details and reuse the pipeline for MSS.
    [As soon as you set the pipeline to a playing state it goes through various interim states before reaching the PLAYING state.
     Proper resource allocation should be done in proper states(stream specific and non-stream specific). There can be events coming in that
     indicates a CAPS(decoder configuration) and SEGMENT(AU time stamp).  Proper plugin code should be written to handle this.
    
     Player sets the pipeline to playing state. Using the ASYNC_DONE to send stream_started notification to external apps.
     If there is start from non-zero offset request, then upon the receipt of ASYNC_DONE we would do an immediate seek.
     We turn off pre-rolling after going to  playing state. Down side of it is we dont know when the set_position completion takes place.
     Then we came out with a polling mechanism to detect the position change.] 
   * Later I would support moving onto newer versions of GStreamer. Optimization in terms of number of copies.   
     Follow the cookbook techniques.
     Use some of the new features.
     Support all use cases.
     Solid unit test frame work
     Ensure all the OTT pipelines work properly and pass all unit tests.


* What did you learn from it?    
    * GStreamer framework and plugin development, prerolling etc.
    * DBus communication.
    * Memory leak detection using scripts and Valgrind etc. Optimization and stabiliatione and productize.
      Had to learn how the linux memory model works?
      G_slice_alloc would keep the memoey still around. So, we would not know if its a leak.
      type initialization..
    * GLib that OO and design patterns like pipeline, factory, Observer etc.
    * GDB Multithreading debugging(backtrace, deadlock and blocked threads), debugging FOSS components.
    * Javascript and HTML5 video tag.
    * Success: Recognised the talent and contribution. They wanted me to MV office. That was an indirect appreciation of skill and my work.
    * I would later act as an internal consultant as to if anybody has question how the pipeline works they would ask me.
    
    * Reduce number of copies.
    * Low Memory footprint. Run Valgrind and keep it low. Gstremer has it limitations. Bloated code.

*******************************************************************************************************************
Eride GPS experience:
*. Testing of GPS software in dense urban conditions. I would drive around in the SF financial district at 2AM to collect 
   GPS data.
*  Enahancements to GPS algorithms.
   There is BBRAM to which you write the RTC offset when the receiver is shut down. When the receiver is turned ON again,
   it reads the offset from the BBRAM, adds the offset to RTC time and thus calculates the accurate time and performs
   all the calculation. One of the application of time is to find out if the ephemeris is valid or not. 
*. GPS diagnostics software support. Diagnostics software was used reproduce error scenarious, and to tune GPS algorithms. 
   You record measurements and record positions calculated. Later for the same measurements 
   you try to produce positions again and see if it makes a difference. We used memento design pattern in here. 
*. Development and support for a software development farm. You make one change for a software and then playback with all the previous 
   diagnostics files. This will generate a single file output where you could compare all the results simultaneously.
*. Going over NMEA specifications and formatting the GPS engine output to generate these sentenses. 
*. Development Ruby scripts that would be used for optmizing GPS performance.
*. Using a simulator scenarios to simulate extreme GPS conditions. Also to develop scenarios to test for COCOM compliance.
*. Development of HAL/OS abstraction layer. Mainly UART and Server code.
*. Development of reference applications.
*. Board bringup of ARM/MIPS based platforms. Fix UART driver code for ARM platforms. It was always dropping packets. Integrate and run GPS algo.
*. Performance evaluation of hardware platforms. Using Drystones MIPS.
*. Porting onto WinCE based platforms.
*. Fix UART driver code for WinCE/ARM platforms. It was always dropping packets.
*. Support for a third party VSP software and then developed an in-house WinCE VSP software. 
   GPS would write to the VSP port and mapping software would pick from that.
*. MISRA C compliance: Guidelines for the Use of the C Language in Vehicle-Based Soft-ware," 
*. Develop I2C and SPI drivers for eRide SoC.
*. Stack Usage calculation: 
   *. You have access to the memory address of stack.
   * Testing based approach. Initialize it to a pattern.
   2. Beginning of the every polling loop check how much of that has not been modified.
   3. Use recplay files to playback. After the crash we go ahead and diagnose the contents of the stack.
   
    
*********************************************************************************************************************
[Challenging Project: YouTube PlayBack + DIAL Integration]
Business context:
   Integration of YouTube App with STBs and pass all certification tests.
Main design:
   MSE support in WebKIT and OpentV player and GStreamer framework. 
   Use the existing OTT pipeline to playback YouTube video. But, write more GStreamer plugin.
   Integrate DIAL code. The DIAL REST Service enables a DIAL client to query, launch and optionally stop applications 
   on a DIAL Server device.
   
My role in it:
   * Write a simple app(JS) that would launch YouTube and do reserach as to what are the lauch parameters. DIAL needs this.
      Also, ensure that DIAL end to end features work. Inegrate Netflix DIAL code etc. Ensure all the DIAL tests pass.
     and be accountible. Able to go over javasript test code to identify test cases and criterion for passing.
      Resolve all the issues around start from non-zero offset when playing using DIAL.
   * Modify/implement player functionality, Be accountible for some of the trick mode aspects of the certfication[Cancel a seek when a seek is going on]
     Also ensure live related Youtube aspects work properly. 
   * Handle the part where data transfer between webkit process and pipeline porcess transfer takes place.
     Feed the pipeline with the appropriate source segment and flush the shared memory when a seek takes place.
   * EOF logic. How to handle that properly?
   * When we upgraded to newer version of Gstreamer, do all the relevant porting.
   
What made it challenging?
   * Miss MOov box in the case of youTube.
   * NO access to the Youtube source code.

What did I learn from it?   
   * MSE
   * DIAL prootocol
   
   
**********************************************************************************************************************    
[Challenging Project: Application Manager Window Manager Support for STBs]

Business context:
   Ability to run multiple applications on an STB. There was a requirement to run Netflix in backfground mode.
Main design:
                            DirectFB work around the Linux kernel.
   Applications create windows using DirectFB and window manager is aware of all windows present in the system and their 
   states in terms of visibility, z-order and focis. Application manager queries the 
   state of the app with WinMan performs action accordingly. Listen to DirectFB graphics calls using SaWMan interface 
   and control the GUI and what applications are running. 
My role in it:
   Own the WinMan code and design APIs and be the go to person.
   Restacking logic: When a window is raised to top all the associated windows also should be raised properly.
   Restacking takes place ensure that right window gets the focus.
What made it challenging?
What did I learn from it?   
    DirectFB
    Debugging directFB
    Ownership with qucik turnaround times.
    
    
**********************************************************************************************************************    
[Challenging Project: DVBST and DVB teletext Subtitle support for OpenTV framework]

Business context:
    Own and suport subrtitles. HLS streams have DVBST and DVB Teletext embedded in them. 
    Player should be able to decode and render those subtitles.

Main design:
    Main port existing libraries and integrate with our Gstreamer framework. Teletext for broadcast and Teletext for streaming.

My role in it: 
   Initially team member(Ownership,Text conversion utility), accountible for a component. Then team lead and technical lead interacting 
   with QA team and project managers.
   
Challenges;
    * Most of the team members moved onto other project.
    * Corrupt stream/stream not available.
    * Nail down the PTS library. You register with the PTS library and it renderes when it timehits the library.
    * Be accountible for entire subtitle support.
    * talkingt to customers.
    * Write a C++ based encode conversion format. 

What did I learn : Window manager

***********************************************************************************************************************       

Similarities between I2C and SPI
* Protocols are well-suited for communications between integrated circuits, for slow communication with on-board peripherals.
* Both are master slave protocol. Communication is always initiated by a master.
* Both are synchronous protocols.

Differences between I2C and SPI
* SPI is faster.  Used for writing to Flash. For Flash programming SPI is used since SPI is very fast.
  Used to connect the microcontroller peripherals with 4 wires. 
* I2C uses 2 wires. Clock and Data. Clock is unidirectional. Data is bidirectional. More than 2 devices can exist on the same bus.
  Using 2 wires you can connect a peripheral to a microcontroller.
  SPI uses 4 wires. Clock, Data In, Data out, and Chip select. Clock is always an output going from master to slave. CS selects the device.
* I2C: Addressing is software based.
  SPI: Addressing is hardware based.
* I2C: More than one master can exist.
  SPI: Only one master can exist.
* I2C: Max 3.5Mbps.
  SPI: Can go over 10Mbps and upto 20Mbps.
* I2C: Is half duplex(At any point, you are either sending or receiving).
  SPI: Is full duplex(sending and receiving at the same time).
  Winner?
  * I²C(less pins and lines) is a clear winner over SPI in sparing pins, board routing and how easy it is to build an I²C network.  
  * Both SPI and I2C offer good support for communication with low-speed devices, but SPI is better suited to applications in which 
    devices transfer data streams, while I²C is better at multi master ‘register access’ application.

  
************************************************************************************************************************
OTV General experience
Design patterns used at OTV;

Creational:

    * Singleton:
        * player manager?
    * Abstract Factory: Glib object creation.
    * Factory Method:    
Structural: 
    * Proxy pattern(Every process talks to other process using proxy)
    
Behavioral:

Concurrency:    

************************************************************************************************************************
2008 - 
2009 - 
2010 - 
2011 - IVS/ 
2012 - Telephonica suport  
2013 - Playe trick modes. DVBST subtitles
2014 - DIAL + Teletext. YouTube support.
2015 - DIAL support, WinMan support for MultiApp.
       Show, raisetoTop and provide focus.
       DirectFB upgrade 
2016 - YouTube Bug fixes. Gstreamer Upgrade + WebKit Upgrade + CI + Multiapp ZIndex + Z Layer stuff.

Interview takeaways:

Applie Phone screen: Unit tests. Size of int mistake while reversing a string.

BnW Onsite: Did not listen to the request for Class diagram. listen, listen, listen. Did not ask adequate number of questions.
            I was not throwing enough technical terms; mutex, message queue etc..
            
Symantek 1:            
NVIDIA1: 
    1. Given three arrays, find all elements that add upto K by adding one member of each array. 
       * Soln 1: Brute Force. O(n * n * n) soln.
       * Soln 2: Sort the last array(n * log n). For every two values you search for the third in the sorted array. O(n * n * log n) soln.
       * Soln 3: For Second and third array generate all pairs and their sum(n * n). Have a map where you store the key as the sum. values are 
                 vector of index pair. Now you go over the first array and for every element, lookup the map and see if (k - element) exists.
                 O(n * n) soln.  
                 
       I did not push hard.

    2. Exception handling in C++. How to achieve something equivalent of Python's final? Good job.            
    3. What is the problem of deriving square from rectangle? OOPS went wrong..
       SOLID: Only when you substitue a class you can replace.
       
   
Symantek 2:
    1. what is the difference between ipv4 and ipv6?
    2. What is the difference between multicast and broadcast?
    3. What is NAT and ARP?
    4. C++ what is virtual?
    5. What is QOS
    6. Difference between C and C++
    I think I did a bad job at answering the basics.
NVIDIA2:   
    1. Use of volatile.
    2. strcpy   
    Your ability to go down a problem.     
     
Akamai:
    1. Significance of copy contructor?
    2. What is virtual?
    3. What is pure virtual function?
    4. What is initialization list?
    5. What is friend function?
    6. Can you create an instance of a pure virtual function/Abstract class?
    7. What is condition variable?
    8. How do you achieve a singleton in C++
    9. Design a C++ linked list class that has values in ascending order.
         
IKMOCK1; Path in a tree that adds to a particular val. Did not ask if its OK to just print and screwed up the stuff.
         No discussions. Take control of the interview.
         Dont waste time in writing unnecessary stuff like node struct etc.

IKMOCK2; In an array find 4 values that add to a sum. Didnt event think of brute force soln.
         I thought of a recursive brute force. If I were to think of iterative brute force it would have been better.
         Trying to remember the entire problem.
         Also came out with recursive soln that was 2 pow n complexity. Bad bad Bad..4 for loops would have been n pow 4. better
        
IKMOCK3: Problem: Spilt a linked list such that all odds are at the beginning and evens are at the end.
         Did not have a proper test cases.
         run by your code with solid test cases.
         Identify what are the challenges in traversing and iterating a linked list?  Because he said dding to the tail is a better approach.
         But, I did not identify some of the corner cases:
         1. Traversing until when?
         2. returning the new head?
         3. proper handling of the prev nullpointer.
         4. I had holes in my pointer assginements.
         
         Most important thing is I had it going. But, then when he provided an alternate solution
         I immediately jumped onto his solution without pushing my self further on the solution I had.
         
Ashok Mock:
         Great job: Draw a table. Could identify it was a graph problem. Should have understood the problem better.
         Jumped onto DFS first. BFS would have been a better choice. Evluate BFS and DFS both before starting coding.
         
FaceBook Phone:
         1. Clone a LL. Hint was given regarding the dummy node.
         Initially create a dummy node. Point the prev to this node. 
         When you do prev->next you dont have to do a check for prev to null pointer. Just keep attaching to the tail and then 
         prev->next = newNode;
         Important: Do not forget to release the dummy node.
         2. Clone a tree with random pointers.
         3. Create all subsets in a set. Why is 2 power n.
         Calcualating the complexity: I made a mistake finally because I did not say  2 power n * n. Never ignore the 
         complexity of the printing part. 
 
Krush:

GetAround:

RiverBed:
         Solved the first part in 25 minutes. Struggled with the second part. 
         Was going back and forth with the flashlight. Very bad mistake. 
         May be should have drawn the thing on a book. 
         Every problem think completly how you would solve it before writing the solution. you should also be able to explain 
         it in simple english using data strucutre words. 
           

InFocus:
     
Conviva:
      Missed the word linear search InFocus. Find the Kth largest.
      Onsite:
      * What do you mean by excellent multi-threading skills
      * Can you make structure volatile?
Uber:   
         Bit stressed. After the first solution relaxed and did not push myself for the better solution.
         Asked about Boost. How come you did not use Boost or any other libraries provided by C++? I just used Catch.hpp.
         Did not sell myself nicely there..
         I think I lacked the energy for C++ 



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Preparation. Keep examples ready. Have binary tree example ready that you can quickly draw on white board.
Have examples ready in your cheat sheet. Have trees with 2 n leaves.

My approach for white boarding:
After the interviewer says, go ahead and code:
1. Write the example in the corner of the white board. All the way at the top. Write some of the basic test cases. 
2. Write input arguments. No closing parenthesis yet.
3. Write function name.
4. Leave 2 spaces for initialization later.
5. Write the error handling case followed by base case.
6. Recursive part
7. Post processing after recursive part.   
8. return values. 
9. while loop, dont forget to increment appropriate index.
10. Identation: 2 spaces. 
11. You are writing all the stacks,data structures etc all the way down. 
    You are standing in the middle. Point is you dont want to run around from
    one corner of the room to another.

////////////////////////////////////////////////////////////////////////////////////////

*******************************************************************************************************************
    Why do you want sign in bonus?
    * My 401K loan.
    * I want to send my daughter to private school.
    * I want to buy a new car.
 
*******************************************************************************************************************

